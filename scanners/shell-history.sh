# Copyright 2020 FireEye, Inc. and Citrix Systems, Inc.

# FreeBSD/NetScaler bash doesn't support array declaration shortcut
# so we create the array by hand... I'm sorry.
declare -a shell_history_blacklist;
shell_history_blacklist[0]="95.179.163.186";
# from: https://isc.sans.edu/diaryimages/images/20200112-235452(1).png
shell_history_blacklist[1]="/wp-content/uploads/"
shell_history_blacklist[2]="tee /netscaler/portal"
shell_history_blacklist[3]="185.178.45.221"
shell_history_blacklist[4]="ci.sh"
shell_history_blacklist[5]="ci2.sh"
shell_history_blacklist[6]="ci3.sh"
shell_history_blacklist[7]="159.69.37.196"
shell_history_blacklist[8]="cmd.pl"
shell_history_blacklist[9]="/etc/passwd"
shell_history_blacklist[10]="/etc/security/passwd"
shell_history_blacklist[11]="/etc/shadow"
shell_history_blacklist[12]="/flash/nsconfig/ns.conf"
shell_history_blacklist[13]="NSC_USER"
shell_history_blacklist[14]="nc -l"
shell_history_blacklist[15]="python -c '"
shell_history_blacklist[16]="www.jdjd.com"
# this script uses whoami,
# so we flag ourselves (facepalm)
#shell_history_blacklist[17]="whoami"
shell_history_blacklist[18]="61.218.225.74"
# IP of host serving EternalBlue scanner/exploiter
shell_history_blacklist[19]="45.120.53.214"
shell_history_blacklist[20]="eternalblue.replay"
shell_history_blacklist[21]="scan.py"
shell_history_blacklist[22]="x64.dll"
shell_history_blacklist[23]="x86.dll"
shell_history_blacklist[24]="xp_eternalblue.replay"
shell_history_blacklist[25]="ld.sh"
shell_history_blacklist[26]="piz.Lan"
shell_history_blacklist[27]="de.py"
shell_history_blacklist[28]=".new.zip"
shell_history_blacklist[29]="/tmp/rAgn"
shell_history_blacklist[30]="/tmp/.init/httpd"
# other activity
shell_history_blacklist[30]="198.44.227.126"
shell_history_blacklist[31]="/tmp/l.sh"
shell_history_blacklist[32]="23.234.10.122"
declare -a shell_history_paths;
shell_history_paths[0]="/var/log/bash.log";
shell_history_paths[1]="/var/log/notice.log";

scan_shell_history() {
    for path in "${shell_history_paths[@]}"; do
        if  ! compgen -G "$root_directory/$path*" >/dev/null; then
            debug "didn't find $path files";
            continue;
        fi

        local found=false;
        for re in "${shell_history_blacklist[@]}"; do
            # /dev/null to ensure at least one of these files exists so zgrep doesn't fail
            local entries=$(zgrep -F "$re" "$root_directory/$path"* /dev/null);
            if [ -n "$entries" ]; then
                found=true;
                report_match "blacklisted content '$re'";
                report "matches for '$re':";
                report "$entries";
            fi
        done

        if [ "$found" != true ]; then
            debug "did not find blacklisted content in $path";
        fi
    done
}